//var i18n = require('i18n-nodejs');
var fs = require('fs');
var path = require('path');
module.exports={
	/*
	*	Para las vistas que son de ext.js obtiene todos los ficheros
	*   de todos los directorios y escribe el contenido en un fichero
	*   llamado all-classes.js de esa mismo directorio raiz.
	*/
    preCompileApp: function (directory) {
		var self=this;
		fs.readdirSync(directory)
			.forEach(function(file) {
			   if (fs.statSync(path.join(directory,file)).isDirectory()) {
					self.preCompileApp(path.join(directory,file));
			   }else {

					if(file=='compileApp'){
						var code = '';
						code += self.get(path.join(directory,'app','model'));
						code += self.get(path.join(directory,'app','store'));
						code += self.get(path.join(directory,'app','view'));
						code += self.get(path.join(directory,'app','controller'));
						if (fs.existsSync(path.join(directory,'app.js'))) {
							code += fs.readFileSync(path.join(directory,'app.js'));
						}
						fs.writeFileSync(path.join(directory,'all-classes.js'), code);
					}
			   }
			   
			})
		
    },
	/*
	* Busca ficheros .js y retorna el contenido de estos 
	*/
    get: function(directory) {
    layer = '';
    var files = fs.readdirSync(directory);
    fs.readdirSync(directory)
		.forEach(function(file){
			if (!fs.statSync(path.join(directory,file)).isDirectory()){
				if (path.extname(path.join(directory,file)) == '.js') {
					layer += fs.readFileSync(path.join(directory,file));
				}
			}
			
	})
    return layer;
}

}
