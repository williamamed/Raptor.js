'use strict'

var util= require('util')
	, fs= require('fs')
	, path= require('path')


class Controller{
	
	constructor(R, prefix, main, beforeTask) {
        // always initialize all instance properties

        this.prefix='';
        this.prefixNode=(prefix)?prefix:'';
        this.mainClass=main;
		this.app=R.app;
		this.R=R;
		this.beforeTask=beforeTask;
    }
	
	route(method,path){
		var arg=[this.prefixNode + this.prefix + path,this.beforeTask];
		for(var i=2;i<arguments.length;i++){
			arg.push(this.proxy(arguments[i]))
		}
		
		this.app[method].apply(this.app,arg)

		
	}

	routes(router){

		
		for(var i in router){

			if(typeof i == 'string'){
				if(typeof router[i] == 'function'){
					this.R.app.all( this.prefixNode + this.prefix + i ,this.beforeTask,this.proxy(router[i]))
				}

				if(typeof router[i] == 'object'){
					if(router[i]['method']){
						this.route(router[i]['method'],i,router[i].action)
					}else{
						this.route('all',i,router[i].action)
					}
				}
			}
							
		}
		
	}
	
	proxy(callback,scope){
		var me=this;
		
		return function(req,res){
				
				var resp=callback.apply(me,arguments);
			
			

			if(typeof resp == 'string'){
				res.end(resp);
				return;
			}
				
			
			if(typeof resp !== 'undefined')
				res.end();
		}
	}
	
	getLang(tag,scope){		
		return this.R.language.getNode(tag,scope);
	}

	
}

module.exports=Controller;