"use strict"
var comp = require('node-minify');
var ext = require('./middleware/Extjs');
var backbone = require('./middleware/Backbone');
var path=require('path')
/**
*
*
*
*/
class Compressor {

	constructor(R,bundle){
		this.R=R;
		this.bundle=bundle;
	}

	compressJS(options){
		if(options.compress==true)
			return this._run('uglifyjs',options.input,options.output)
		else
			return this._run('no-compress',options.input,options.output)
	}

	compressCSS(options){
		if(options.compress==true)
			return this._run('clean-css',options.input,options.output)
		else
			return this._run('no-compress',options.input,options.output)
	}

	compressExtjs(compress){
		if(this.R.bundles[this.bundle])
			ext.preCompileApp(path.join(this.R.basePath,'public','rmodules',this.R.bundles[this.bundle].path),compress)
	}

	compressBackbone(compress){
		if(this.R.bundles[this.bundle])
			backbone.preCompileApp(path.join(this.R.basePath,'public','rmodules',this.R.bundles[this.bundle].path),compress)
	}

	_run(type,input,output,options){
		if(!options)
			options={}
		return comp.minify({
		  compressor: type,
		  publicFolder: this.R.basePath,
		  input: input,
		  output: this.R.basePath+output,
		  callback: function (err, min) {
		  	if(err)
		  		console.log(err)
		  }		
		});

	}
}

module.exports=Compressor