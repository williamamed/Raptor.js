var format= require('./../util/format'),
	fs=require('fs'),
	path=require('path')

module.exports={
	command:'--create-node',
	description: 'Crea un componente RaptorNode en el directorio src',
	placeholder:'createNode',
	action:function(R,value,arg){
		var readline = require('readline'),
	      rl = readline.createInterface(process.stdin, process.stdout),
	      self=this,
	      index=0,
	      cmp=''

	      
	      console.log(format.getFormated('¿Cúal es el nombre del componente RaptorNode?','blue'));
	      rl.setPrompt('Raptor.js> ');
	      rl.prompt();
	      rl.on('line', function(line) {

	      	switch(index){
	      		case 0:{
	      			var name=line.trim();
			      	var exp=/^\w+$/;
			      	
			      	if(exp.test(name)){
			      		index++;
			      		cmp=name;
			      		console.log(format.getFormated('¿Cúal es el nombre del agrupador(vendor) que desea utilizar en el componente?','blue'));
			      		rl.prompt();
			      	}else{
			      		console.log(format.getFormated('La cadena contiene caracteres no permitidos, entre de nuevo el nombre','red'));
			      		rl.prompt();
			      	}
	      			break;
	      		}
	      		case 1:{
	      			var name=line.trim();
			      	var exp=/^\w+$/;
			      	
			      	if(exp.test(name)){
			      		index++;
			      		self.onCreate(cmp,name,R)
			      		rl.close()
			      	}else{
			      		console.log(format.getFormated('La cadena contiene caracteres no permitidos, entre de nuevo el nombre','red'));
			      		rl.prompt();
			      	}
	      			break;
	      		}
	      	}

	      	
	      })
	},

	onCreate:function(name,vendor,R){
		var vendorDir=path.join(R.basePath,'src',vendor)

		if(fs.existsSync(vendorDir)){
			this.createCmp(path.join(vendorDir,name+'Node'),R,name)
		}else{
			fs.mkdirSync(vendorDir);
			console.log(format.getFormated('Agrupador '+vendor+' creado','blue'));
			var result=this.createCmp(path.join(vendorDir,'/',name+'Node'),R,name)
			if(!result && fs.readdirSync(vendorDir).length==0){
				fs.rmdirSync(vendorDir);
				console.log(format.getFormated('Agrupador '+vendor+' eliminado','red'));
			}

		}
		
	},

	createCmp:function(name,R,cmp){
		R.lookModules();
			
		if(!fs.existsSync(name) && !R.bundles[cmp+'Node']){
			fs.mkdirSync(name);
			console.log(format.getFormated('Directorio del componente '+cmp+' creado','blue'));
			fs.mkdirSync(path.join(name,'/Controllers'));
			console.log(format.getFormated('Directorio Controllers creado','blue'));
			fs.mkdirSync(path.join(name,'/Views'));
			console.log(format.getFormated('Directorio Views creado','blue'));
			fs.mkdirSync(path.join(name,'/Models'));
			console.log(format.getFormated('Directorio Models creado','blue'));
			
			var fd=fs.openSync(path.join(name,'index.js'),'w')
			fs.writeSync(fd,this.cmpTemplate.replace('{clase}',cmp+'Node').replace('{clase}',cmp+'Node'));
			fs.closeSync(fd);
			console.log(format.getFormated('Clase index creada','blue'));

			var fd=fs.openSync(path.join(name,'Controllers','DefaultES6.js'),'w')
			fs.writeSync(fd,this.controllerES6);
			fs.closeSync(fd);
			console.log(format.getFormated('Clase controladora ES6 creada','blue'));

			var fd=fs.openSync(path.join(name,'Controllers','DefaultCommon.js'),'w')
			fs.writeSync(fd,this.controllerCommon);
			fs.closeSync(fd);
			console.log(format.getFormated('Clase controladora Commonjs creada','blue'));

			return true;
		}else{
			console.log(format.getFormated('No se pudo crear el componente con el nombre especificado, ya existe uno con el mismo nombre','red'));
			return false;
		}
	},
	cmpTemplate:"'use strict';\n"+
"/*\n"+
"* Raptor.js - Node framework\n"+
"* \n"+
"* \n"+
"*\n"+
"*/\n"+
"class {clase} {\n"+
"\n"+
"	/*\n"+
"	* Raptor.js - Node framework\n"+
"	* \n"+
"	* Entrada de configuracion del componente\n"+
"	* se ejecuta cuando se registran los componentes\n"+
"	* \n"+
"	* @param Raptor R instancia de la aplicacion Raptor\n"+
"	*\n"+
"	*/\n"+
"	configure(R){\n"+
"\n"+
"	}\n"+
"}\n"+

"module.exports={clase}",

   controllerES6:'"use strict";\n'+

"var Controller=require('raptorjs').Controller\n"+
"/*\n"+
"* Raptor.js - Node framework\n"+
"* Controlador ES6\n"+
"* \n"+
"*\n"+
"*/\n"+
"class DefaultController extends Controller{\n"+
"\n"+
"	configure(){\n"+
"		//this.route('all','/example/controller',this.indexAction)\n"+
"	}\n"+
"\n"+
"	indexAction(req,res,next){\n"+
'		return "hola mundo controller";\n'+
"	}\n"+
"}\n"+

"module.exports=DefaultController;\n",

	controllerCommon:"/*\n"+
"* Raptor.js - Node framework\n"+
"* \n"+
"* Commonjs Controller\n"+
"*\n"+
"*/\n"+
"module.exports={\n"+
"\n"+
"	'/example/controller2': function(req, res){\n"+
'		return "hola controller second"\n'+
"	}\n"+
"}\n"
	
}