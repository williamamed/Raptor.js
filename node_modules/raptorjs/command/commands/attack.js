var fs = require('fs')
var path = require('path')

module.exports={
	command:'--attack',
	description: 'Enciende el servidor, opcionalmente establecer el parametro dev para vigilar los cambios --attack dev',
	placeholder:'attack',
	action:function(R,value,arg){
		this.path=R.basePath;
		this.RImage=fs.readFileSync(__dirname+'/../util/raw.data').toString()
		if(arg[0] && arg[0]=='dev')
			this.devMode()
		else{
			var msg='\x1b[36m'+this.RImage+'\x1b[39m'
			console.log(msg)
			R.main(R.basePath);
		}
			

	},

	devMode:function(){
		
		var spawn = require('child_process').spawn
		var server;
		var baseDir=this.path;
		var main=path.join(__dirname,'/../util/app.js')
		/**
		msg="...................................................\n"+
			"...................................................\n"+
			"...................................................\n"+
			".......................        ....................\n"+
			".....................            ..................\n"+
			"....................   Raptor.js  .................\n"+
			"....................              .................\n"+
			".....................    Node    ..................\n"+
			".......................        ....................\n"+
			"...................................................\n"+
			"...................................................\n"+
			"...................................................\n"+
			"...................................................\n"+
			"...................................................\n"+
			"...................................................\n";*/
		msg='\x1b[36m'+this.RImage+'\x1b[39m'
		//console.log('\x1b[31;1m' + msg + '\x1b[0m')

		var mod={
			name:'',
			time: (new Date).getTime()
		}

		 fs.watch(this.path+'/src',{recursive:true}, function (event, filename) {
		 	
		 	update(event, filename)

		 	return;
			
		});
		 fs.watch(this.path+'/config',{recursive:true}, function (event, filename) {
		 	
		 	update(event, filename)

		 	return;
			
		});
		 fs.watch(this.path+'/node_modules',{recursive:true}, function (event, filename) {
		 	
		 	update(event, filename)

		 	return;
			
		});

		/**
		 * Check if we can update the server
		 *
		 **/
		 function update(event, filename){
		 	if(filename!==mod.name){
		 		mod.time=(new Date).getTime();
		 		mod.name=filename;
		 		console.log('filename updated: ' + filename);
		 		reload(main)
		 	}else{
			 	if((new Date).getTime()-mod.time>=500){
			 		mod.time=(new Date).getTime();
			 		mod.name=filename;
			 		console.log('filename updated: ' + filename);
			 		 reload(main)
			 	}else
			 		mod.time=(new Date).getTime();
			}	
		 }

		 function reload(file){
		 	if(server)
		 		server.kill();
			server=spawn('node', [file,baseDir])
			console.log(msg)
			server.stdout.on('data', function (data) {
				console.log('Raptor.js info: ' +'\x1b[36m'+ data +'\x1b[39m');
			});
			server.stderr.on('data', function (data) {
				console.log('\x1b[31;1mRaptor.js error:\x1b[0m' + data);
			});
			server.on('close', function (code) {
				console.log('\x1b[36mRaptor.js child process exited with code ' + code+'\x1b[39m');
			});
		 }

		 reload(main)
	}
}